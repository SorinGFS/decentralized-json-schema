{
    "schema://json-schema.org/draft-04/schema": {
        "#": {
            "$defs": {
                "positiveInteger": {
                    "minimum": 0,
                    "type": "integer"
                },
                "positiveIntegerDefault0": {
                    "allOf": [
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/positiveInteger"
                        },
                        {
                            "default": 0
                        }
                    ]
                },
                "schemaArray": {
                    "items": {
                        "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "simpleTypes": {
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "null",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "stringArray": {
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema"
            }
        },
        "default": {},
        "dependentRequired": {
            "exclusiveMaximum": [
                "maximum"
            ],
            "exclusiveMinimum": [
                "minimum"
            ]
        },
        "description": "Core schema meta-schema",
        "properties": {
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/_meta"
                    }
                ],
                "default": {}
            },
            "allOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/schemaArray"
            },
            "anyOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/schemaArray"
            },
            "default": {},
            "definitions": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "dependentSchemas": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/_meta"
                        },
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/stringArray"
                        }
                    ]
                },
                "type": "object"
            },
            "description": {
                "type": "string"
            },
            "enum": {
                "minItems": 1,
                "type": "array",
                "uniqueItems": true
            },
            "exclusiveMaximum": {
                "default": false,
                "type": "boolean"
            },
            "exclusiveMinimum": {
                "default": false,
                "type": "boolean"
            },
            "format": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "items": {
                "anyOf": [
                    {
                        "type": "boolean"
                    },
                    {
                        "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/_meta"
                    }
                ],
                "default": {}
            },
            "maxItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/positiveInteger"
            },
            "maxLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/positiveInteger"
            },
            "maxProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/positiveInteger"
            },
            "maximum": {
                "type": "number"
            },
            "minItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/positiveIntegerDefault0"
            },
            "minLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/positiveIntegerDefault0"
            },
            "minProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/positiveIntegerDefault0"
            },
            "minimum": {
                "type": "number"
            },
            "multipleOf": {
                "exclusiveMinimum": 0,
                "type": "number"
            },
            "not": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/_meta"
            },
            "oneOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/schemaArray"
            },
            "pattern": {
                "format": "regex",
                "type": "string"
            },
            "patternProperties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "properties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "required": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/stringArray"
            },
            "title": {
                "type": "string"
            },
            "type": {
                "anyOf": [
                    {
                        "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/simpleTypes"
                    },
                    {
                        "items": {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-04~1schema/#/$defs/simpleTypes"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                    }
                ]
            },
            "uniqueItems": {
                "default": false,
                "type": "boolean"
            }
        },
        "type": "object"
    },
    "schema://json-schema.org/draft-06/schema": {
        "#": {
            "$defs": {
                "nonNegativeInteger": {
                    "minimum": 0,
                    "type": "integer"
                },
                "nonNegativeIntegerDefault0": {
                    "allOf": [
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/nonNegativeInteger"
                        },
                        {
                            "default": 0
                        }
                    ]
                },
                "schemaArray": {
                    "items": {
                        "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "simpleTypes": {
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "null",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "stringArray": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema"
            }
        },
        "default": {},
        "properties": {
            "$ref": {
                "format": "uri-reference",
                "type": "string"
            },
            "additionalProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/_meta"
            },
            "allOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/schemaArray"
            },
            "anyOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/schemaArray"
            },
            "const": {},
            "contains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/_meta"
            },
            "default": {},
            "definitions": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "dependentSchemas": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/_meta"
                        },
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/stringArray"
                        }
                    ]
                },
                "type": "object"
            },
            "description": {
                "type": "string"
            },
            "enum": {
                "minItems": 1,
                "type": "array",
                "uniqueItems": true
            },
            "examples": {
                "items": {},
                "type": "array"
            },
            "exclusiveMaximum": {
                "type": "number"
            },
            "exclusiveMinimum": {
                "type": "number"
            },
            "format": {
                "type": "string"
            },
            "items": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/_meta"
            },
            "maxItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/nonNegativeInteger"
            },
            "maxLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/nonNegativeInteger"
            },
            "maxProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/nonNegativeInteger"
            },
            "maximum": {
                "type": "number"
            },
            "minItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/nonNegativeIntegerDefault0"
            },
            "minLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/nonNegativeIntegerDefault0"
            },
            "minProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/nonNegativeIntegerDefault0"
            },
            "minimum": {
                "type": "number"
            },
            "multipleOf": {
                "exclusiveMinimum": 0,
                "type": "number"
            },
            "not": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/_meta"
            },
            "oneOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/schemaArray"
            },
            "pattern": {
                "format": "regex",
                "type": "string"
            },
            "patternProperties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/_meta"
                },
                "default": {},
                "propertyNames": {
                    "format": "regex"
                },
                "type": "object"
            },
            "properties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "propertyNames": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/_meta"
            },
            "required": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/stringArray"
            },
            "title": {
                "type": "string"
            },
            "type": {
                "anyOf": [
                    {
                        "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/simpleTypes"
                    },
                    {
                        "items": {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-06~1schema/#/$defs/simpleTypes"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                    }
                ]
            },
            "uniqueItems": {
                "default": false,
                "type": "boolean"
            }
        },
        "title": "Core schema meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft-07/schema": {
        "#": {
            "$defs": {
                "nonNegativeInteger": {
                    "minimum": 0,
                    "type": "integer"
                },
                "nonNegativeIntegerDefault0": {
                    "allOf": [
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/nonNegativeInteger"
                        },
                        {
                            "default": 0
                        }
                    ]
                },
                "schemaArray": {
                    "items": {
                        "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "simpleTypes": {
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "null",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "stringArray": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema"
            }
        },
        "default": true,
        "properties": {
            "$comment": {
                "type": "string"
            },
            "$ref": {
                "format": "uri-reference",
                "type": "string"
            },
            "additionalProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
            },
            "allOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/schemaArray"
            },
            "anyOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/schemaArray"
            },
            "const": true,
            "contains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
            },
            "contentEncoding": {
                "type": "string"
            },
            "contentMediaType": {
                "type": "string"
            },
            "default": true,
            "definitions": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "dependentSchemas": {
                "additionalProperties": {
                    "anyOf": [
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
                        },
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/stringArray"
                        }
                    ]
                },
                "type": "object"
            },
            "description": {
                "type": "string"
            },
            "else": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
            },
            "enum": {
                "items": true,
                "minItems": 1,
                "type": "array",
                "uniqueItems": true
            },
            "examples": {
                "items": true,
                "type": "array"
            },
            "exclusiveMaximum": {
                "type": "number"
            },
            "exclusiveMinimum": {
                "type": "number"
            },
            "format": {
                "type": "string"
            },
            "if": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
            },
            "items": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
            },
            "maxItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/nonNegativeInteger"
            },
            "maxLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/nonNegativeInteger"
            },
            "maxProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/nonNegativeInteger"
            },
            "maximum": {
                "type": "number"
            },
            "minItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/nonNegativeIntegerDefault0"
            },
            "minLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/nonNegativeIntegerDefault0"
            },
            "minProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/nonNegativeIntegerDefault0"
            },
            "minimum": {
                "type": "number"
            },
            "multipleOf": {
                "exclusiveMinimum": 0,
                "type": "number"
            },
            "not": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
            },
            "oneOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/schemaArray"
            },
            "pattern": {
                "format": "regex",
                "type": "string"
            },
            "patternProperties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
                },
                "default": {},
                "propertyNames": {
                    "format": "regex"
                },
                "type": "object"
            },
            "properties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "propertyNames": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
            },
            "readOnly": {
                "default": false,
                "type": "boolean"
            },
            "required": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/stringArray"
            },
            "then": {
                "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/_meta"
            },
            "title": {
                "type": "string"
            },
            "type": {
                "anyOf": [
                    {
                        "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/simpleTypes"
                    },
                    {
                        "items": {
                            "$ref": "#/schema:~1~1json-schema.org~1draft-07~1schema/#/$defs/simpleTypes"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                    }
                ]
            },
            "uniqueItems": {
                "default": false,
                "type": "boolean"
            },
            "writeOnly": {
                "default": false,
                "type": "boolean"
            }
        },
        "title": "Core schema meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2019-09/meta/applicator": {
        "#": {
            "$defs": {
                "schemaArray": {
                    "items": {
                        "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
                    },
                    "minItems": 1,
                    "type": "array"
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator"
            }
        },
        "properties": {
            "additionalProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
            },
            "allOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/$defs/schemaArray"
            },
            "anyOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/$defs/schemaArray"
            },
            "contains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
            },
            "dependentSchemas": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
                },
                "type": "object"
            },
            "else": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
            },
            "if": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
            },
            "items": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
            },
            "not": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
            },
            "oneOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/$defs/schemaArray"
            },
            "patternProperties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
                },
                "default": {},
                "propertyNames": {
                    "format": "regex"
                },
                "type": "object"
            },
            "properties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "propertyNames": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
            },
            "then": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
            },
            "unevaluatedItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
            },
            "unevaluatedProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator/#/_meta"
            }
        },
        "title": "Applicator vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2019-09/meta/content": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1content"
            }
        },
        "properties": {
            "contentEncoding": {
                "type": "string"
            },
            "contentMediaType": {
                "type": "string"
            },
            "contentSchema": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1content/#/_meta"
            }
        },
        "title": "Content vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2019-09/meta/core": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1core"
            }
        },
        "properties": {
            "$comment": {
                "type": "string"
            },
            "$defs": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1core/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "$ref": {
                "format": "uri-reference",
                "type": "string"
            }
        },
        "title": "Core vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2019-09/meta/format": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1format"
            }
        },
        "properties": {
            "format": {
                "type": "string"
            }
        },
        "title": "Format vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2019-09/meta/meta-data": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1meta-data"
            }
        },
        "properties": {
            "default": true,
            "deprecated": {
                "default": false,
                "type": "boolean"
            },
            "description": {
                "type": "string"
            },
            "examples": {
                "items": true,
                "type": "array"
            },
            "readOnly": {
                "default": false,
                "type": "boolean"
            },
            "title": {
                "type": "string"
            },
            "writeOnly": {
                "default": false,
                "type": "boolean"
            }
        },
        "title": "Meta-data vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2019-09/meta/validation": {
        "#": {
            "$defs": {
                "nonNegativeInteger": {
                    "minimum": 0,
                    "type": "integer"
                },
                "nonNegativeIntegerDefault0": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/nonNegativeInteger",
                    "default": 0
                },
                "simpleTypes": {
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "null",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "stringArray": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation"
            }
        },
        "properties": {
            "const": true,
            "dependentRequired": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/stringArray"
                },
                "type": "object"
            },
            "enum": {
                "items": true,
                "type": "array"
            },
            "exclusiveMaximum": {
                "type": "number"
            },
            "exclusiveMinimum": {
                "type": "number"
            },
            "maxContains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maxItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maxLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maxProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maximum": {
                "type": "number"
            },
            "minContains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/nonNegativeInteger",
                "default": 1
            },
            "minItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/nonNegativeIntegerDefault0"
            },
            "minLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/nonNegativeIntegerDefault0"
            },
            "minProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/nonNegativeIntegerDefault0"
            },
            "minimum": {
                "type": "number"
            },
            "multipleOf": {
                "exclusiveMinimum": 0,
                "type": "number"
            },
            "pattern": {
                "format": "regex",
                "type": "string"
            },
            "required": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/stringArray"
            },
            "type": {
                "anyOf": [
                    {
                        "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/simpleTypes"
                    },
                    {
                        "items": {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/simpleTypes"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                    }
                ]
            },
            "uniqueItems": {
                "default": false,
                "type": "boolean"
            }
        },
        "title": "Validation vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2019-09/schema": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1schema"
            }
        },
        "allOf": [
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1core"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1applicator"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1meta-data"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1format"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1content"
            }
        ],
        "properties": {
            "definitions": {
                "$comment": "While no longer an official keyword as it is replaced by $defs, this keyword is retained in the meta-schema to prevent incompatible extensions as it remains in common use.",
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1schema/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "dependentSchemas": {
                "$comment": "\"dependencies\" is no longer a keyword, but schema authors should avoid redefining it to facilitate a smooth transition to \"dependentSchemas\" and \"dependentRequired\"",
                "additionalProperties": {
                    "anyOf": [
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1schema/#/_meta"
                        },
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~12019-09~1meta~1validation/#/$defs/stringArray"
                        }
                    ]
                },
                "type": "object"
            }
        },
        "title": "Core and Validation specifications meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2020-12/meta/applicator": {
        "#": {
            "$defs": {
                "schemaArray": {
                    "items": {
                        "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
                    },
                    "minItems": 1,
                    "type": "array"
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator"
            }
        },
        "properties": {
            "additionalProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
            },
            "allOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/$defs/schemaArray"
            },
            "anyOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/$defs/schemaArray"
            },
            "contains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
            },
            "dependentSchemas": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "else": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
            },
            "if": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
            },
            "items": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
            },
            "not": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
            },
            "oneOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/$defs/schemaArray"
            },
            "patternProperties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
                },
                "default": {},
                "propertyNames": {
                    "format": "regex"
                },
                "type": "object"
            },
            "prefixItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/$defs/schemaArray"
            },
            "properties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "propertyNames": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
            },
            "then": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator/#/_meta"
            }
        },
        "title": "Applicator vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2020-12/meta/content": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1content"
            }
        },
        "properties": {
            "contentEncoding": {
                "type": "string"
            },
            "contentMediaType": {
                "type": "string"
            },
            "contentSchema": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1content/#/_meta"
            }
        },
        "title": "Content vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2020-12/meta/core": {
        "#": {
            "$defs": {
                "anchorString": {
                    "pattern": "^[A-Za-z_][-A-Za-z0-9._]*$",
                    "type": "string"
                },
                "uriReferenceString": {
                    "format": "uri-reference",
                    "type": "string"
                },
                "uriString": {
                    "format": "uri",
                    "type": "string"
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1core"
            }
        },
        "properties": {
            "$comment": {
                "type": "string"
            },
            "$defs": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1core/#/_meta"
                },
                "type": "object"
            },
            "$ref": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1core/#/$defs/uriReferenceString"
            }
        },
        "title": "Core vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2020-12/meta/format-annotation": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1format-annotation"
            }
        },
        "properties": {
            "format": {
                "type": "string"
            }
        },
        "title": "Format vocabulary meta-schema for annotation results",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2020-12/meta/format-assertion": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1format-assertion"
            }
        },
        "properties": {
            "format": {
                "type": "string"
            }
        },
        "title": "Format vocabulary meta-schema for assertion results",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2020-12/meta/meta-data": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1meta-data"
            }
        },
        "properties": {
            "default": true,
            "deprecated": {
                "default": false,
                "type": "boolean"
            },
            "description": {
                "type": "string"
            },
            "examples": {
                "items": true,
                "type": "array"
            },
            "readOnly": {
                "default": false,
                "type": "boolean"
            },
            "title": {
                "type": "string"
            },
            "writeOnly": {
                "default": false,
                "type": "boolean"
            }
        },
        "title": "Meta-data vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2020-12/meta/unevaluated": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1unevaluated"
            }
        },
        "properties": {
            "unevaluatedItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1unevaluated/#/_meta"
            },
            "unevaluatedProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1unevaluated/#/_meta"
            }
        },
        "title": "Unevaluated applicator vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2020-12/meta/validation": {
        "#": {
            "$defs": {
                "nonNegativeInteger": {
                    "minimum": 0,
                    "type": "integer"
                },
                "nonNegativeIntegerDefault0": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/nonNegativeInteger",
                    "default": 0
                },
                "simpleTypes": {
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "null",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "stringArray": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation"
            }
        },
        "properties": {
            "const": true,
            "dependentRequired": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/stringArray"
                },
                "type": "object"
            },
            "enum": {
                "items": true,
                "type": "array"
            },
            "exclusiveMaximum": {
                "type": "number"
            },
            "exclusiveMinimum": {
                "type": "number"
            },
            "maxContains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maxItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maxLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maxProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maximum": {
                "type": "number"
            },
            "minContains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/nonNegativeInteger",
                "default": 1
            },
            "minItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/nonNegativeIntegerDefault0"
            },
            "minLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/nonNegativeIntegerDefault0"
            },
            "minProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/nonNegativeIntegerDefault0"
            },
            "minimum": {
                "type": "number"
            },
            "multipleOf": {
                "exclusiveMinimum": 0,
                "type": "number"
            },
            "pattern": {
                "format": "regex",
                "type": "string"
            },
            "required": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/stringArray"
            },
            "type": {
                "anyOf": [
                    {
                        "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/simpleTypes"
                    },
                    {
                        "items": {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/simpleTypes"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                    }
                ]
            },
            "uniqueItems": {
                "default": false,
                "type": "boolean"
            }
        },
        "title": "Validation vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/2020-12/schema": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1schema"
            }
        },
        "$comment": "This meta-schema also defines keywords that have appeared in previous drafts in order to prevent incompatible extensions as they remain in common use.",
        "allOf": [
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1core"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1applicator"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1unevaluated"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1meta-data"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1format-annotation"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1content"
            }
        ],
        "properties": {
            "definitions": {
                "$comment": "\"definitions\" has been replaced by \"$defs\".",
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1schema/#/_meta"
                },
                "default": {},
                "deprecated": true,
                "type": "object"
            },
            "dependentSchemas": {
                "$comment": "\"dependencies\" has been split and replaced by \"dependentSchemas\" and \"dependentRequired\" in order to serve their differing semantics.",
                "additionalProperties": {
                    "anyOf": [
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1schema/#/_meta"
                        },
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~12020-12~1meta~1validation/#/$defs/stringArray"
                        }
                    ]
                },
                "default": {},
                "deprecated": true,
                "type": "object"
            }
        },
        "title": "Core and Validation specifications meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/next/meta/applicator": {
        "#": {
            "$defs": {
                "nonNegativeInteger": {
                    "minimum": 0,
                    "type": "integer"
                },
                "schemaArray": {
                    "items": {
                        "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
                    },
                    "minItems": 1,
                    "type": "array"
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator"
            }
        },
        "properties": {
            "additionalProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
            },
            "allOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/$defs/schemaArray"
            },
            "anyOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/$defs/schemaArray"
            },
            "contains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
            },
            "dependentSchemas": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "else": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
            },
            "if": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
            },
            "items": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
            },
            "maxContains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/$defs/nonNegativeInteger"
            },
            "minContains": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/$defs/nonNegativeInteger",
                "default": 1
            },
            "not": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
            },
            "oneOf": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/$defs/schemaArray"
            },
            "patternProperties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
                },
                "default": {},
                "propertyNames": {
                    "format": "regex"
                },
                "type": "object"
            },
            "prefixItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/$defs/schemaArray"
            },
            "properties": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
                },
                "default": {},
                "type": "object"
            },
            "propertyDependencies": {
                "additionalProperties": {
                    "additionalProperties": {
                        "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
                    },
                    "default": {},
                    "type": "object"
                },
                "default": {},
                "type": "object"
            },
            "propertyNames": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
            },
            "then": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator/#/_meta"
            }
        },
        "title": "Applicator vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/next/meta/content": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1content"
            }
        },
        "properties": {
            "contentEncoding": {
                "type": "string"
            },
            "contentMediaType": {
                "type": "string"
            },
            "contentSchema": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1content/#/_meta"
            }
        },
        "title": "Content vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/next/meta/core": {
        "#": {
            "$defs": {
                "anchorString": {
                    "pattern": "^[A-Za-z_][-A-Za-z0-9._]*$",
                    "type": "string"
                },
                "iriReferenceString": {
                    "format": "iri-reference",
                    "type": "string"
                },
                "iriString": {
                    "format": "iri",
                    "type": "string"
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1core"
            }
        },
        "properties": {
            "$comment": {
                "type": "string"
            },
            "$defs": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1core/#/_meta"
                },
                "type": "object"
            },
            "$ref": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1core/#/$defs/iriReferenceString"
            }
        },
        "title": "Core vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/next/meta/format-annotation": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1format-annotation"
            }
        },
        "properties": {
            "format": {
                "type": "string"
            }
        },
        "title": "Format vocabulary meta-schema for annotation results",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/next/meta/format-assertion": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1format-assertion"
            }
        },
        "properties": {
            "format": {
                "type": "string"
            }
        },
        "title": "Format vocabulary meta-schema for assertion results",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/next/meta/meta-data": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1meta-data"
            }
        },
        "properties": {
            "default": true,
            "deprecated": {
                "default": false,
                "type": "boolean"
            },
            "description": {
                "type": "string"
            },
            "examples": {
                "items": true,
                "type": "array"
            },
            "readOnly": {
                "default": false,
                "type": "boolean"
            },
            "title": {
                "type": "string"
            },
            "writeOnly": {
                "default": false,
                "type": "boolean"
            }
        },
        "title": "Meta-data vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/next/meta/unevaluated": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1unevaluated"
            }
        },
        "properties": {
            "unevaluatedItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1unevaluated/#/_meta"
            },
            "unevaluatedProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1unevaluated/#/_meta"
            }
        },
        "title": "Unevaluated applicator vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/next/meta/validation": {
        "#": {
            "$defs": {
                "nonNegativeInteger": {
                    "minimum": 0,
                    "type": "integer"
                },
                "nonNegativeIntegerDefault0": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/nonNegativeInteger",
                    "default": 0
                },
                "simpleTypes": {
                    "enum": [
                        "array",
                        "boolean",
                        "integer",
                        "null",
                        "number",
                        "object",
                        "string"
                    ]
                },
                "stringArray": {
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation"
            }
        },
        "properties": {
            "const": true,
            "dependentRequired": {
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/stringArray"
                },
                "type": "object"
            },
            "enum": {
                "items": true,
                "type": "array"
            },
            "exclusiveMaximum": {
                "type": "number"
            },
            "exclusiveMinimum": {
                "type": "number"
            },
            "maxItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maxLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maxProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/nonNegativeInteger"
            },
            "maximum": {
                "type": "number"
            },
            "minItems": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/nonNegativeIntegerDefault0"
            },
            "minLength": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/nonNegativeIntegerDefault0"
            },
            "minProperties": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/nonNegativeIntegerDefault0"
            },
            "minimum": {
                "type": "number"
            },
            "multipleOf": {
                "exclusiveMinimum": 0,
                "type": "number"
            },
            "pattern": {
                "format": "regex",
                "type": "string"
            },
            "required": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/stringArray"
            },
            "type": {
                "anyOf": [
                    {
                        "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/simpleTypes"
                    },
                    {
                        "items": {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/simpleTypes"
                        },
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true
                    }
                ]
            },
            "uniqueItems": {
                "default": false,
                "type": "boolean"
            }
        },
        "title": "Validation vocabulary meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    },
    "schema://json-schema.org/draft/next/output/schema": {
        "#": {
            "$defs": {
                "flag": {
                    "properties": {
                        "valid": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "valid"
                    ]
                },
                "hierarchical": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1output~1schema/#/$defs/outputUnit"
                },
                "list": {
                    "properties": {
                        "nested": {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1output~1schema/#/$defs/outputUnitArray"
                        },
                        "valid": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "valid",
                        "nested"
                    ]
                },
                "outputUnit": {
                    "allOf": [
                        {
                            "if": {
                                "anyOf": [
                                    {
                                        "required": [
                                            "errors"
                                        ]
                                    },
                                    {
                                        "required": [
                                            "droppedAnnotations"
                                        ]
                                    }
                                ]
                            },
                            "then": {
                                "properties": {
                                    "valid": {
                                        "const": false
                                    }
                                }
                            }
                        },
                        {
                            "if": {
                                "required": [
                                    "annotations"
                                ]
                            },
                            "then": {
                                "properties": {
                                    "valid": {
                                        "const": true
                                    }
                                }
                            }
                        }
                    ],
                    "properties": {
                        "annotations": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "droppedAnnotations": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "errors": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        "evaluationPath": {
                            "format": "json-pointer",
                            "type": "string"
                        },
                        "instanceLocation": {
                            "format": "json-pointer",
                            "type": "string"
                        },
                        "nested": {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1output~1schema/#/$defs/outputUnitArray"
                        },
                        "schemaLocation": {
                            "format": "uri",
                            "type": "string"
                        },
                        "valid": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "valid",
                        "evaluationPath",
                        "schemaLocation",
                        "instanceLocation"
                    ]
                },
                "outputUnitArray": {
                    "items": {
                        "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1output~1schema/#/$defs/outputUnit"
                    },
                    "type": "array"
                }
            }
        },
        "anyOf": [
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1output~1schema/#/$defs/flag"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1output~1schema/#/$defs/list"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1output~1schema/#/$defs/hierarchical"
            }
        ],
        "description": "A schema that validates the minimum requirements for validation output"
    },
    "schema://json-schema.org/draft/next/schema": {
        "#": {
            "_meta": {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1schema"
            }
        },
        "$comment": "This meta-schema also defines keywords that have appeared in previous drafts in order to prevent incompatible extensions as they remain in common use.",
        "allOf": [
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1core"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1applicator"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1unevaluated"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1meta-data"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1format-annotation"
            },
            {
                "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1content"
            }
        ],
        "properties": {
            "definitions": {
                "$comment": "\"definitions\" has been replaced by \"$defs\".",
                "additionalProperties": {
                    "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1schema/#/_meta"
                },
                "default": {},
                "deprecated": true,
                "type": "object"
            },
            "dependentSchemas": {
                "$comment": "\"dependencies\" has been split and replaced by \"dependentSchemas\" and \"dependentRequired\" in order to serve their differing semantics.",
                "additionalProperties": {
                    "anyOf": [
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1schema/#/_meta"
                        },
                        {
                            "$ref": "#/schema:~1~1json-schema.org~1draft~1next~1meta~1validation/#/$defs/stringArray"
                        }
                    ]
                },
                "default": {},
                "deprecated": true,
                "type": "object"
            }
        },
        "title": "Core and Validation specifications meta-schema",
        "type": [
            "object",
            "boolean"
        ]
    }
}