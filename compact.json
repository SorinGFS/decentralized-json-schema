{
    "schema:": {
        "": {
            "json-schema.org": {
                "draft": {
                    "2019-09": {
                        "meta": {
                            "applicator": {
                                "#": {
                                    "$defs": {
                                        "schemaArray": {
                                            "items": {
                                                "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                            },
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator"
                                    }
                                },
                                "properties": {
                                    "additionalProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                    },
                                    "allOf": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "anyOf": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "contains": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                    },
                                    "dependentSchemas": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                        },
                                        "type": "object"
                                    },
                                    "else": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                    },
                                    "if": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                    },
                                    "items": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                    },
                                    "not": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                    },
                                    "oneOf": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "patternProperties": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                        },
                                        "default": {},
                                        "propertyNames": {
                                            "format": "regex"
                                        },
                                        "type": "object"
                                    },
                                    "properties": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                        },
                                        "default": {},
                                        "type": "object"
                                    },
                                    "propertyNames": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                    },
                                    "then": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                    },
                                    "unevaluatedItems": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                    },
                                    "unevaluatedProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator/#/_meta"
                                    }
                                },
                                "title": "Applicator vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "content": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/content"
                                    }
                                },
                                "properties": {
                                    "contentEncoding": {
                                        "type": "string"
                                    },
                                    "contentMediaType": {
                                        "type": "string"
                                    },
                                    "contentSchema": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/content/#/_meta"
                                    }
                                },
                                "title": "Content vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "core": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/core"
                                    }
                                },
                                "properties": {
                                    "$comment": {
                                        "type": "string"
                                    },
                                    "$defs": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/2019-09/meta/core/#/_meta"
                                        },
                                        "default": {},
                                        "type": "object"
                                    },
                                    "$ref": {
                                        "format": "uri-reference",
                                        "type": "string"
                                    }
                                },
                                "title": "Core vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "format": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/format"
                                    }
                                },
                                "properties": {
                                    "format": {
                                        "type": "string"
                                    }
                                },
                                "title": "Format vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "meta-data": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/meta-data"
                                    }
                                },
                                "properties": {
                                    "default": true,
                                    "deprecated": {
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "examples": {
                                        "items": true,
                                        "type": "array"
                                    },
                                    "readOnly": {
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "writeOnly": {
                                        "default": false,
                                        "type": "boolean"
                                    }
                                },
                                "title": "Meta-data vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "validation": {
                                "#": {
                                    "$defs": {
                                        "nonNegativeInteger": {
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "nonNegativeIntegerDefault0": {
                                            "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/nonNegativeInteger",
                                            "default": 0
                                        },
                                        "simpleTypes": {
                                            "enum": [
                                                "array",
                                                "boolean",
                                                "integer",
                                                "null",
                                                "number",
                                                "object",
                                                "string"
                                            ]
                                        },
                                        "stringArray": {
                                            "default": [],
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "uniqueItems": true
                                        }
                                    },
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation"
                                    }
                                },
                                "properties": {
                                    "const": true,
                                    "dependentRequired": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/stringArray"
                                        },
                                        "type": "object"
                                    },
                                    "enum": {
                                        "items": true,
                                        "type": "array"
                                    },
                                    "exclusiveMaximum": {
                                        "type": "number"
                                    },
                                    "exclusiveMinimum": {
                                        "type": "number"
                                    },
                                    "maxContains": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maxItems": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maxLength": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maxProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maximum": {
                                        "type": "number"
                                    },
                                    "minContains": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/nonNegativeInteger",
                                        "default": 1
                                    },
                                    "minItems": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/nonNegativeIntegerDefault0"
                                    },
                                    "minLength": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/nonNegativeIntegerDefault0"
                                    },
                                    "minProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/nonNegativeIntegerDefault0"
                                    },
                                    "minimum": {
                                        "type": "number"
                                    },
                                    "multipleOf": {
                                        "exclusiveMinimum": 0,
                                        "type": "number"
                                    },
                                    "pattern": {
                                        "format": "regex",
                                        "type": "string"
                                    },
                                    "required": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/stringArray"
                                    },
                                    "type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/simpleTypes"
                                            },
                                            {
                                                "items": {
                                                    "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/simpleTypes"
                                                },
                                                "minItems": 1,
                                                "type": "array",
                                                "uniqueItems": true
                                            }
                                        ]
                                    },
                                    "uniqueItems": {
                                        "default": false,
                                        "type": "boolean"
                                    }
                                },
                                "title": "Validation vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            }
                        },
                        "schema": {
                            "#": {
                                "_meta": {
                                    "$ref": "#/schema://json-schema.org/draft/2019-09/schema"
                                }
                            },
                            "allOf": [
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2019-09/meta/core"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2019-09/meta/applicator"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2019-09/meta/meta-data"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2019-09/meta/format"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2019-09/meta/content"
                                }
                            ],
                            "properties": {
                                "definitions": {
                                    "$comment": "While no longer an official keyword as it is replaced by $defs, this keyword is retained in the meta-schema to prevent incompatible extensions as it remains in common use.",
                                    "additionalProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/2019-09/schema/#/_meta"
                                    },
                                    "default": {},
                                    "type": "object"
                                },
                                "dependentSchemas": {
                                    "$comment": "\"dependencies\" is no longer a keyword, but schema authors should avoid redefining it to facilitate a smooth transition to \"dependentSchemas\" and \"dependentRequired\"",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/schema://json-schema.org/draft/2019-09/schema/#/_meta"
                                            },
                                            {
                                                "$ref": "#/schema://json-schema.org/draft/2019-09/meta/validation/#/$defs/stringArray"
                                            }
                                        ]
                                    },
                                    "type": "object"
                                }
                            },
                            "title": "Core and Validation specifications meta-schema",
                            "type": [
                                "object",
                                "boolean"
                            ]
                        }
                    },
                    "2020-12": {
                        "meta": {
                            "applicator": {
                                "#": {
                                    "$defs": {
                                        "schemaArray": {
                                            "items": {
                                                "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                            },
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator"
                                    }
                                },
                                "properties": {
                                    "additionalProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                    },
                                    "allOf": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "anyOf": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "contains": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                    },
                                    "dependentSchemas": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                        },
                                        "default": {},
                                        "type": "object"
                                    },
                                    "else": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                    },
                                    "if": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                    },
                                    "items": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                    },
                                    "not": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                    },
                                    "oneOf": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "patternProperties": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                        },
                                        "default": {},
                                        "propertyNames": {
                                            "format": "regex"
                                        },
                                        "type": "object"
                                    },
                                    "prefixItems": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "properties": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                        },
                                        "default": {},
                                        "type": "object"
                                    },
                                    "propertyNames": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                    },
                                    "then": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator/#/_meta"
                                    }
                                },
                                "title": "Applicator vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "content": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/content"
                                    }
                                },
                                "properties": {
                                    "contentEncoding": {
                                        "type": "string"
                                    },
                                    "contentMediaType": {
                                        "type": "string"
                                    },
                                    "contentSchema": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/content/#/_meta"
                                    }
                                },
                                "title": "Content vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "core": {
                                "#": {
                                    "$defs": {
                                        "anchorString": {
                                            "pattern": "^[A-Za-z_][-A-Za-z0-9._]*$",
                                            "type": "string"
                                        },
                                        "uriReferenceString": {
                                            "format": "uri-reference",
                                            "type": "string"
                                        },
                                        "uriString": {
                                            "format": "uri",
                                            "type": "string"
                                        }
                                    },
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/core"
                                    }
                                },
                                "properties": {
                                    "$comment": {
                                        "type": "string"
                                    },
                                    "$defs": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/2020-12/meta/core/#/_meta"
                                        },
                                        "type": "object"
                                    },
                                    "$ref": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/core/#/$defs/uriReferenceString"
                                    }
                                },
                                "title": "Core vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "format-annotation": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/format-annotation"
                                    }
                                },
                                "properties": {
                                    "format": {
                                        "type": "string"
                                    }
                                },
                                "title": "Format vocabulary meta-schema for annotation results",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "format-assertion": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/format-assertion"
                                    }
                                },
                                "properties": {
                                    "format": {
                                        "type": "string"
                                    }
                                },
                                "title": "Format vocabulary meta-schema for assertion results",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "meta-data": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/meta-data"
                                    }
                                },
                                "properties": {
                                    "default": true,
                                    "deprecated": {
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "examples": {
                                        "items": true,
                                        "type": "array"
                                    },
                                    "readOnly": {
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "writeOnly": {
                                        "default": false,
                                        "type": "boolean"
                                    }
                                },
                                "title": "Meta-data vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "unevaluated": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/unevaluated"
                                    }
                                },
                                "properties": {
                                    "unevaluatedItems": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/unevaluated/#/_meta"
                                    },
                                    "unevaluatedProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/unevaluated/#/_meta"
                                    }
                                },
                                "title": "Unevaluated applicator vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "validation": {
                                "#": {
                                    "$defs": {
                                        "nonNegativeInteger": {
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "nonNegativeIntegerDefault0": {
                                            "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/nonNegativeInteger",
                                            "default": 0
                                        },
                                        "simpleTypes": {
                                            "enum": [
                                                "array",
                                                "boolean",
                                                "integer",
                                                "null",
                                                "number",
                                                "object",
                                                "string"
                                            ]
                                        },
                                        "stringArray": {
                                            "default": [],
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "uniqueItems": true
                                        }
                                    },
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation"
                                    }
                                },
                                "properties": {
                                    "const": true,
                                    "dependentRequired": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/stringArray"
                                        },
                                        "type": "object"
                                    },
                                    "enum": {
                                        "items": true,
                                        "type": "array"
                                    },
                                    "exclusiveMaximum": {
                                        "type": "number"
                                    },
                                    "exclusiveMinimum": {
                                        "type": "number"
                                    },
                                    "maxContains": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maxItems": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maxLength": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maxProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maximum": {
                                        "type": "number"
                                    },
                                    "minContains": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/nonNegativeInteger",
                                        "default": 1
                                    },
                                    "minItems": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/nonNegativeIntegerDefault0"
                                    },
                                    "minLength": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/nonNegativeIntegerDefault0"
                                    },
                                    "minProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/nonNegativeIntegerDefault0"
                                    },
                                    "minimum": {
                                        "type": "number"
                                    },
                                    "multipleOf": {
                                        "exclusiveMinimum": 0,
                                        "type": "number"
                                    },
                                    "pattern": {
                                        "format": "regex",
                                        "type": "string"
                                    },
                                    "required": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/stringArray"
                                    },
                                    "type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/simpleTypes"
                                            },
                                            {
                                                "items": {
                                                    "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/simpleTypes"
                                                },
                                                "minItems": 1,
                                                "type": "array",
                                                "uniqueItems": true
                                            }
                                        ]
                                    },
                                    "uniqueItems": {
                                        "default": false,
                                        "type": "boolean"
                                    }
                                },
                                "title": "Validation vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            }
                        },
                        "schema": {
                            "#": {
                                "_meta": {
                                    "$ref": "#/schema://json-schema.org/draft/2020-12/schema"
                                }
                            },
                            "$comment": "This meta-schema also defines keywords that have appeared in previous drafts in order to prevent incompatible extensions as they remain in common use.",
                            "allOf": [
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2020-12/meta/core"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2020-12/meta/applicator"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2020-12/meta/unevaluated"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2020-12/meta/meta-data"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2020-12/meta/format-annotation"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/2020-12/meta/content"
                                }
                            ],
                            "properties": {
                                "definitions": {
                                    "$comment": "\"definitions\" has been replaced by \"$defs\".",
                                    "additionalProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/2020-12/schema/#/_meta"
                                    },
                                    "default": {},
                                    "deprecated": true,
                                    "type": "object"
                                },
                                "dependentSchemas": {
                                    "$comment": "\"dependencies\" has been split and replaced by \"dependentSchemas\" and \"dependentRequired\" in order to serve their differing semantics.",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/schema://json-schema.org/draft/2020-12/schema/#/_meta"
                                            },
                                            {
                                                "$ref": "#/schema://json-schema.org/draft/2020-12/meta/validation/#/$defs/stringArray"
                                            }
                                        ]
                                    },
                                    "default": {},
                                    "deprecated": true,
                                    "type": "object"
                                }
                            },
                            "title": "Core and Validation specifications meta-schema",
                            "type": [
                                "object",
                                "boolean"
                            ]
                        }
                    },
                    "next": {
                        "meta": {
                            "applicator": {
                                "#": {
                                    "$defs": {
                                        "nonNegativeInteger": {
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "schemaArray": {
                                            "items": {
                                                "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                            },
                                            "minItems": 1,
                                            "type": "array"
                                        }
                                    },
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator"
                                    }
                                },
                                "properties": {
                                    "additionalProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                    },
                                    "allOf": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "anyOf": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "contains": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                    },
                                    "dependentSchemas": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                        },
                                        "default": {},
                                        "type": "object"
                                    },
                                    "else": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                    },
                                    "if": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                    },
                                    "items": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                    },
                                    "maxContains": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/$defs/nonNegativeInteger"
                                    },
                                    "minContains": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/$defs/nonNegativeInteger",
                                        "default": 1
                                    },
                                    "not": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                    },
                                    "oneOf": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "patternProperties": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                        },
                                        "default": {},
                                        "propertyNames": {
                                            "format": "regex"
                                        },
                                        "type": "object"
                                    },
                                    "prefixItems": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/$defs/schemaArray"
                                    },
                                    "properties": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                        },
                                        "default": {},
                                        "type": "object"
                                    },
                                    "propertyDependencies": {
                                        "additionalProperties": {
                                            "additionalProperties": {
                                                "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                            },
                                            "default": {},
                                            "type": "object"
                                        },
                                        "default": {},
                                        "type": "object"
                                    },
                                    "propertyNames": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                    },
                                    "then": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/applicator/#/_meta"
                                    }
                                },
                                "title": "Applicator vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "content": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/content"
                                    }
                                },
                                "properties": {
                                    "contentEncoding": {
                                        "type": "string"
                                    },
                                    "contentMediaType": {
                                        "type": "string"
                                    },
                                    "contentSchema": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/content/#/_meta"
                                    }
                                },
                                "title": "Content vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "core": {
                                "#": {
                                    "$defs": {
                                        "anchorString": {
                                            "pattern": "^[A-Za-z_][-A-Za-z0-9._]*$",
                                            "type": "string"
                                        },
                                        "iriReferenceString": {
                                            "format": "iri-reference",
                                            "type": "string"
                                        },
                                        "iriString": {
                                            "format": "iri",
                                            "type": "string"
                                        }
                                    },
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/core"
                                    }
                                },
                                "properties": {
                                    "$comment": {
                                        "type": "string"
                                    },
                                    "$defs": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/next/meta/core/#/_meta"
                                        },
                                        "type": "object"
                                    },
                                    "$ref": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/core/#/$defs/iriReferenceString"
                                    }
                                },
                                "title": "Core vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "format-annotation": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/format-annotation"
                                    }
                                },
                                "properties": {
                                    "format": {
                                        "type": "string"
                                    }
                                },
                                "title": "Format vocabulary meta-schema for annotation results",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "format-assertion": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/format-assertion"
                                    }
                                },
                                "properties": {
                                    "format": {
                                        "type": "string"
                                    }
                                },
                                "title": "Format vocabulary meta-schema for assertion results",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "meta-data": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/meta-data"
                                    }
                                },
                                "properties": {
                                    "default": true,
                                    "deprecated": {
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "examples": {
                                        "items": true,
                                        "type": "array"
                                    },
                                    "readOnly": {
                                        "default": false,
                                        "type": "boolean"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "writeOnly": {
                                        "default": false,
                                        "type": "boolean"
                                    }
                                },
                                "title": "Meta-data vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "unevaluated": {
                                "#": {
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/unevaluated"
                                    }
                                },
                                "properties": {
                                    "unevaluatedItems": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/unevaluated/#/_meta"
                                    },
                                    "unevaluatedProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/unevaluated/#/_meta"
                                    }
                                },
                                "title": "Unevaluated applicator vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            },
                            "validation": {
                                "#": {
                                    "$defs": {
                                        "nonNegativeInteger": {
                                            "minimum": 0,
                                            "type": "integer"
                                        },
                                        "nonNegativeIntegerDefault0": {
                                            "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/nonNegativeInteger",
                                            "default": 0
                                        },
                                        "simpleTypes": {
                                            "enum": [
                                                "array",
                                                "boolean",
                                                "integer",
                                                "null",
                                                "number",
                                                "object",
                                                "string"
                                            ]
                                        },
                                        "stringArray": {
                                            "default": [],
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "uniqueItems": true
                                        }
                                    },
                                    "_meta": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/validation"
                                    }
                                },
                                "properties": {
                                    "const": true,
                                    "dependentRequired": {
                                        "additionalProperties": {
                                            "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/stringArray"
                                        },
                                        "type": "object"
                                    },
                                    "enum": {
                                        "items": true,
                                        "type": "array"
                                    },
                                    "exclusiveMaximum": {
                                        "type": "number"
                                    },
                                    "exclusiveMinimum": {
                                        "type": "number"
                                    },
                                    "maxItems": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maxLength": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maxProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/nonNegativeInteger"
                                    },
                                    "maximum": {
                                        "type": "number"
                                    },
                                    "minItems": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/nonNegativeIntegerDefault0"
                                    },
                                    "minLength": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/nonNegativeIntegerDefault0"
                                    },
                                    "minProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/nonNegativeIntegerDefault0"
                                    },
                                    "minimum": {
                                        "type": "number"
                                    },
                                    "multipleOf": {
                                        "exclusiveMinimum": 0,
                                        "type": "number"
                                    },
                                    "pattern": {
                                        "format": "regex",
                                        "type": "string"
                                    },
                                    "required": {
                                        "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/stringArray"
                                    },
                                    "type": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/simpleTypes"
                                            },
                                            {
                                                "items": {
                                                    "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/simpleTypes"
                                                },
                                                "minItems": 1,
                                                "type": "array",
                                                "uniqueItems": true
                                            }
                                        ]
                                    },
                                    "uniqueItems": {
                                        "default": false,
                                        "type": "boolean"
                                    }
                                },
                                "title": "Validation vocabulary meta-schema",
                                "type": [
                                    "object",
                                    "boolean"
                                ]
                            }
                        },
                        "output": {
                            "schema": {
                                "#": {
                                    "$defs": {
                                        "flag": {
                                            "properties": {
                                                "valid": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "valid"
                                            ]
                                        },
                                        "hierarchical": {
                                            "$ref": "#/schema://json-schema.org/draft/next/output/schema/#/$defs/outputUnit"
                                        },
                                        "list": {
                                            "properties": {
                                                "nested": {
                                                    "$ref": "#/schema://json-schema.org/draft/next/output/schema/#/$defs/outputUnitArray"
                                                },
                                                "valid": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "valid",
                                                "nested"
                                            ]
                                        },
                                        "outputUnit": {
                                            "allOf": [
                                                {
                                                    "if": {
                                                        "anyOf": [
                                                            {
                                                                "required": [
                                                                    "errors"
                                                                ]
                                                            },
                                                            {
                                                                "required": [
                                                                    "droppedAnnotations"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "valid": {
                                                                "const": false
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "if": {
                                                        "required": [
                                                            "annotations"
                                                        ]
                                                    },
                                                    "then": {
                                                        "properties": {
                                                            "valid": {
                                                                "const": true
                                                            }
                                                        }
                                                    }
                                                }
                                            ],
                                            "properties": {
                                                "annotations": {
                                                    "additionalProperties": true,
                                                    "type": "object"
                                                },
                                                "droppedAnnotations": {
                                                    "additionalProperties": true,
                                                    "type": "object"
                                                },
                                                "errors": {
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    },
                                                    "type": "object"
                                                },
                                                "evaluationPath": {
                                                    "format": "json-pointer",
                                                    "type": "string"
                                                },
                                                "instanceLocation": {
                                                    "format": "json-pointer",
                                                    "type": "string"
                                                },
                                                "nested": {
                                                    "$ref": "#/schema://json-schema.org/draft/next/output/schema/#/$defs/outputUnitArray"
                                                },
                                                "schemaLocation": {
                                                    "format": "uri",
                                                    "type": "string"
                                                },
                                                "valid": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "valid",
                                                "evaluationPath",
                                                "schemaLocation",
                                                "instanceLocation"
                                            ]
                                        },
                                        "outputUnitArray": {
                                            "items": {
                                                "$ref": "#/schema://json-schema.org/draft/next/output/schema/#/$defs/outputUnit"
                                            },
                                            "type": "array"
                                        }
                                    }
                                },
                                "anyOf": [
                                    {
                                        "$ref": "#/schema://json-schema.org/draft/next/output/schema/#/$defs/flag"
                                    },
                                    {
                                        "$ref": "#/schema://json-schema.org/draft/next/output/schema/#/$defs/list"
                                    },
                                    {
                                        "$ref": "#/schema://json-schema.org/draft/next/output/schema/#/$defs/hierarchical"
                                    }
                                ],
                                "description": "A schema that validates the minimum requirements for validation output"
                            }
                        },
                        "schema": {
                            "#": {
                                "_meta": {
                                    "$ref": "#/schema://json-schema.org/draft/next/schema"
                                }
                            },
                            "$comment": "This meta-schema also defines keywords that have appeared in previous drafts in order to prevent incompatible extensions as they remain in common use.",
                            "allOf": [
                                {
                                    "$ref": "#/schema://json-schema.org/draft/next/meta/core"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/next/meta/applicator"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/next/meta/unevaluated"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/next/meta/validation"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/next/meta/meta-data"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/next/meta/format-annotation"
                                },
                                {
                                    "$ref": "#/schema://json-schema.org/draft/next/meta/content"
                                }
                            ],
                            "properties": {
                                "definitions": {
                                    "$comment": "\"definitions\" has been replaced by \"$defs\".",
                                    "additionalProperties": {
                                        "$ref": "#/schema://json-schema.org/draft/next/schema/#/_meta"
                                    },
                                    "default": {},
                                    "deprecated": true,
                                    "type": "object"
                                },
                                "dependentSchemas": {
                                    "$comment": "\"dependencies\" has been split and replaced by \"dependentSchemas\" and \"dependentRequired\" in order to serve their differing semantics.",
                                    "additionalProperties": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/schema://json-schema.org/draft/next/schema/#/_meta"
                                            },
                                            {
                                                "$ref": "#/schema://json-schema.org/draft/next/meta/validation/#/$defs/stringArray"
                                            }
                                        ]
                                    },
                                    "default": {},
                                    "deprecated": true,
                                    "type": "object"
                                }
                            },
                            "title": "Core and Validation specifications meta-schema",
                            "type": [
                                "object",
                                "boolean"
                            ]
                        }
                    }
                },
                "draft-04": {
                    "schema": {
                        "#": {
                            "$defs": {
                                "positiveInteger": {
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "positiveIntegerDefault0": {
                                    "allOf": [
                                        {
                                            "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/positiveInteger"
                                        },
                                        {
                                            "default": 0
                                        }
                                    ]
                                },
                                "schemaArray": {
                                    "items": {
                                        "$ref": "#/schema://json-schema.org/draft-04/schema"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "simpleTypes": {
                                    "enum": [
                                        "array",
                                        "boolean",
                                        "integer",
                                        "null",
                                        "number",
                                        "object",
                                        "string"
                                    ]
                                },
                                "stringArray": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "_meta": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema"
                            }
                        },
                        "default": {},
                        "dependentRequired": {
                            "exclusiveMaximum": [
                                "maximum"
                            ],
                            "exclusiveMinimum": [
                                "minimum"
                            ]
                        },
                        "description": "Core schema meta-schema",
                        "properties": {
                            "additionalProperties": {
                                "anyOf": [
                                    {
                                        "type": "boolean"
                                    },
                                    {
                                        "$ref": "#/schema://json-schema.org/draft-04/schema/#/_meta"
                                    }
                                ],
                                "default": {}
                            },
                            "allOf": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/schemaArray"
                            },
                            "anyOf": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/schemaArray"
                            },
                            "default": {},
                            "definitions": {
                                "additionalProperties": {
                                    "$ref": "#/schema://json-schema.org/draft-04/schema/#/_meta"
                                },
                                "default": {},
                                "type": "object"
                            },
                            "dependentSchemas": {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/schema://json-schema.org/draft-04/schema/#/_meta"
                                        },
                                        {
                                            "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/stringArray"
                                        }
                                    ]
                                },
                                "type": "object"
                            },
                            "description": {
                                "type": "string"
                            },
                            "enum": {
                                "minItems": 1,
                                "type": "array",
                                "uniqueItems": true
                            },
                            "exclusiveMaximum": {
                                "default": false,
                                "type": "boolean"
                            },
                            "exclusiveMinimum": {
                                "default": false,
                                "type": "boolean"
                            },
                            "format": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "boolean"
                                    },
                                    {
                                        "$ref": "#/schema://json-schema.org/draft-04/schema/#/_meta"
                                    }
                                ],
                                "default": {}
                            },
                            "maxItems": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/positiveInteger"
                            },
                            "maxLength": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/positiveInteger"
                            },
                            "maxProperties": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/positiveInteger"
                            },
                            "maximum": {
                                "type": "number"
                            },
                            "minItems": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/positiveIntegerDefault0"
                            },
                            "minLength": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/positiveIntegerDefault0"
                            },
                            "minProperties": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/positiveIntegerDefault0"
                            },
                            "minimum": {
                                "type": "number"
                            },
                            "multipleOf": {
                                "exclusiveMinimum": 0,
                                "type": "number"
                            },
                            "not": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/_meta"
                            },
                            "oneOf": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/schemaArray"
                            },
                            "pattern": {
                                "format": "regex",
                                "type": "string"
                            },
                            "patternProperties": {
                                "additionalProperties": {
                                    "$ref": "#/schema://json-schema.org/draft-04/schema/#/_meta"
                                },
                                "default": {},
                                "type": "object"
                            },
                            "properties": {
                                "additionalProperties": {
                                    "$ref": "#/schema://json-schema.org/draft-04/schema/#/_meta"
                                },
                                "default": {},
                                "type": "object"
                            },
                            "required": {
                                "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/stringArray"
                            },
                            "title": {
                                "type": "string"
                            },
                            "type": {
                                "anyOf": [
                                    {
                                        "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/simpleTypes"
                                    },
                                    {
                                        "items": {
                                            "$ref": "#/schema://json-schema.org/draft-04/schema/#/$defs/simpleTypes"
                                        },
                                        "minItems": 1,
                                        "type": "array",
                                        "uniqueItems": true
                                    }
                                ]
                            },
                            "uniqueItems": {
                                "default": false,
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    }
                },
                "draft-06": {
                    "schema": {
                        "#": {
                            "$defs": {
                                "nonNegativeInteger": {
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "nonNegativeIntegerDefault0": {
                                    "allOf": [
                                        {
                                            "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/nonNegativeInteger"
                                        },
                                        {
                                            "default": 0
                                        }
                                    ]
                                },
                                "schemaArray": {
                                    "items": {
                                        "$ref": "#/schema://json-schema.org/draft-06/schema"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "simpleTypes": {
                                    "enum": [
                                        "array",
                                        "boolean",
                                        "integer",
                                        "null",
                                        "number",
                                        "object",
                                        "string"
                                    ]
                                },
                                "stringArray": {
                                    "default": [],
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "_meta": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema"
                            }
                        },
                        "default": {},
                        "properties": {
                            "$ref": {
                                "format": "uri-reference",
                                "type": "string"
                            },
                            "additionalProperties": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/_meta"
                            },
                            "allOf": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/schemaArray"
                            },
                            "anyOf": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/schemaArray"
                            },
                            "const": {},
                            "contains": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/_meta"
                            },
                            "default": {},
                            "definitions": {
                                "additionalProperties": {
                                    "$ref": "#/schema://json-schema.org/draft-06/schema/#/_meta"
                                },
                                "default": {},
                                "type": "object"
                            },
                            "dependentSchemas": {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/schema://json-schema.org/draft-06/schema/#/_meta"
                                        },
                                        {
                                            "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/stringArray"
                                        }
                                    ]
                                },
                                "type": "object"
                            },
                            "description": {
                                "type": "string"
                            },
                            "enum": {
                                "minItems": 1,
                                "type": "array",
                                "uniqueItems": true
                            },
                            "examples": {
                                "items": {},
                                "type": "array"
                            },
                            "exclusiveMaximum": {
                                "type": "number"
                            },
                            "exclusiveMinimum": {
                                "type": "number"
                            },
                            "format": {
                                "type": "string"
                            },
                            "items": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/_meta"
                            },
                            "maxItems": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/nonNegativeInteger"
                            },
                            "maxLength": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/nonNegativeInteger"
                            },
                            "maxProperties": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/nonNegativeInteger"
                            },
                            "maximum": {
                                "type": "number"
                            },
                            "minItems": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/nonNegativeIntegerDefault0"
                            },
                            "minLength": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/nonNegativeIntegerDefault0"
                            },
                            "minProperties": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/nonNegativeIntegerDefault0"
                            },
                            "minimum": {
                                "type": "number"
                            },
                            "multipleOf": {
                                "exclusiveMinimum": 0,
                                "type": "number"
                            },
                            "not": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/_meta"
                            },
                            "oneOf": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/schemaArray"
                            },
                            "pattern": {
                                "format": "regex",
                                "type": "string"
                            },
                            "patternProperties": {
                                "additionalProperties": {
                                    "$ref": "#/schema://json-schema.org/draft-06/schema/#/_meta"
                                },
                                "default": {},
                                "propertyNames": {
                                    "format": "regex"
                                },
                                "type": "object"
                            },
                            "properties": {
                                "additionalProperties": {
                                    "$ref": "#/schema://json-schema.org/draft-06/schema/#/_meta"
                                },
                                "default": {},
                                "type": "object"
                            },
                            "propertyNames": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/_meta"
                            },
                            "required": {
                                "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/stringArray"
                            },
                            "title": {
                                "type": "string"
                            },
                            "type": {
                                "anyOf": [
                                    {
                                        "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/simpleTypes"
                                    },
                                    {
                                        "items": {
                                            "$ref": "#/schema://json-schema.org/draft-06/schema/#/$defs/simpleTypes"
                                        },
                                        "minItems": 1,
                                        "type": "array",
                                        "uniqueItems": true
                                    }
                                ]
                            },
                            "uniqueItems": {
                                "default": false,
                                "type": "boolean"
                            }
                        },
                        "title": "Core schema meta-schema",
                        "type": [
                            "object",
                            "boolean"
                        ]
                    }
                },
                "draft-07": {
                    "schema": {
                        "#": {
                            "$defs": {
                                "nonNegativeInteger": {
                                    "minimum": 0,
                                    "type": "integer"
                                },
                                "nonNegativeIntegerDefault0": {
                                    "allOf": [
                                        {
                                            "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/nonNegativeInteger"
                                        },
                                        {
                                            "default": 0
                                        }
                                    ]
                                },
                                "schemaArray": {
                                    "items": {
                                        "$ref": "#/schema://json-schema.org/draft-07/schema"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "simpleTypes": {
                                    "enum": [
                                        "array",
                                        "boolean",
                                        "integer",
                                        "null",
                                        "number",
                                        "object",
                                        "string"
                                    ]
                                },
                                "stringArray": {
                                    "default": [],
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "uniqueItems": true
                                }
                            },
                            "_meta": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema"
                            }
                        },
                        "default": true,
                        "properties": {
                            "$comment": {
                                "type": "string"
                            },
                            "$ref": {
                                "format": "uri-reference",
                                "type": "string"
                            },
                            "additionalProperties": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                            },
                            "allOf": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/schemaArray"
                            },
                            "anyOf": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/schemaArray"
                            },
                            "const": true,
                            "contains": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                            },
                            "contentEncoding": {
                                "type": "string"
                            },
                            "contentMediaType": {
                                "type": "string"
                            },
                            "default": true,
                            "definitions": {
                                "additionalProperties": {
                                    "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                                },
                                "default": {},
                                "type": "object"
                            },
                            "dependentSchemas": {
                                "additionalProperties": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                                        },
                                        {
                                            "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/stringArray"
                                        }
                                    ]
                                },
                                "type": "object"
                            },
                            "description": {
                                "type": "string"
                            },
                            "else": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                            },
                            "enum": {
                                "items": true,
                                "minItems": 1,
                                "type": "array",
                                "uniqueItems": true
                            },
                            "examples": {
                                "items": true,
                                "type": "array"
                            },
                            "exclusiveMaximum": {
                                "type": "number"
                            },
                            "exclusiveMinimum": {
                                "type": "number"
                            },
                            "format": {
                                "type": "string"
                            },
                            "if": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                            },
                            "items": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                            },
                            "maxItems": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/nonNegativeInteger"
                            },
                            "maxLength": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/nonNegativeInteger"
                            },
                            "maxProperties": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/nonNegativeInteger"
                            },
                            "maximum": {
                                "type": "number"
                            },
                            "minItems": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/nonNegativeIntegerDefault0"
                            },
                            "minLength": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/nonNegativeIntegerDefault0"
                            },
                            "minProperties": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/nonNegativeIntegerDefault0"
                            },
                            "minimum": {
                                "type": "number"
                            },
                            "multipleOf": {
                                "exclusiveMinimum": 0,
                                "type": "number"
                            },
                            "not": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                            },
                            "oneOf": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/schemaArray"
                            },
                            "pattern": {
                                "format": "regex",
                                "type": "string"
                            },
                            "patternProperties": {
                                "additionalProperties": {
                                    "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                                },
                                "default": {},
                                "propertyNames": {
                                    "format": "regex"
                                },
                                "type": "object"
                            },
                            "properties": {
                                "additionalProperties": {
                                    "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                                },
                                "default": {},
                                "type": "object"
                            },
                            "propertyNames": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                            },
                            "readOnly": {
                                "default": false,
                                "type": "boolean"
                            },
                            "required": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/stringArray"
                            },
                            "then": {
                                "$ref": "#/schema://json-schema.org/draft-07/schema/#/_meta"
                            },
                            "title": {
                                "type": "string"
                            },
                            "type": {
                                "anyOf": [
                                    {
                                        "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/simpleTypes"
                                    },
                                    {
                                        "items": {
                                            "$ref": "#/schema://json-schema.org/draft-07/schema/#/$defs/simpleTypes"
                                        },
                                        "minItems": 1,
                                        "type": "array",
                                        "uniqueItems": true
                                    }
                                ]
                            },
                            "uniqueItems": {
                                "default": false,
                                "type": "boolean"
                            },
                            "writeOnly": {
                                "default": false,
                                "type": "boolean"
                            }
                        },
                        "title": "Core schema meta-schema",
                        "type": [
                            "object",
                            "boolean"
                        ]
                    }
                }
            }
        }
    }
}